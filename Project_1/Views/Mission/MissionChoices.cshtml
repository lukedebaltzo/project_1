@model Project_1.Models.Mission
<link rel="stylesheet" type="text/css" href="~/Content/MyStyles.css" media="screen" />
@{
    ViewBag.Title = "MissionChoices";
}

<h2>Mission Choices</h2>

<!--<h2>Clickable Dropdown</h2>-->
<p>Click on the button to open the dropdown menu.</p>
<br />
<div class="dropdown">
    <button onclick="myFunction()" class="dropbtn">Select a Mission</button>
    <div id="myDropdown" class="dropdown-content">
        <a href="@Url.Action("FijiFAQ", "Mission")">Fiji Suva</a>
        <a href="@Url.Action("ArgentinaFAQ", "Mission")">Argentina Rosario</a>
        <a href="@Url.Action("DominicanRepublicFAQ", "Mission")">Dominican Republic Santo Domingo West</a>
        <a href="@Url.Action("PortugalFAQ", "Mission")">Lisbon Portugal</a>
    </div>
</div>
<h1></h1>
<br />
<div>
    @Html.ActionLink("Back to Home", "Index", "Home") |
    @Html.ActionLink("Contact", "Contact", "Contact") |
    @Html.ActionLink("About Us", "AboutUs", "About")
</div>

<script>
    /* When the user clicks on the button,
    toggle between hiding and showing the dropdown content */
    function myFunction() {
        document.getElementById("myDropdown").classList.toggle("show");
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function (event) {
        if (!event.target.matches('.dropbtn')) {
            var dropdowns = document.getElementsByClassName("dropdown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
        }
    }
</script>


